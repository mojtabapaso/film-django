# Generated by Django 4.1.6 on 2023-02-07 07:45

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('repository', '0003_command'),
    ]

    operations = [
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('image', models.ImageField(upload_to='')),
                ('type', models.CharField(choices=[('Movie', 'Movie'), ('Serial', 'Serial')], max_length=50)),
                ('year_publication', models.DateField()),
                ('file', models.FileField(upload_to='')),
                ('play_status', models.CharField(choices=[('Finished', 'تمام شده'), ('Playing', 'در حال پخش')], max_length=150)),
                ('Quality', models.CharField(choices=[('480', '480'), ('720', '720'), ('1080', '1080')], max_length=50)),
                ('product', models.CharField(max_length=50)),
                ('language', models.CharField(max_length=20)),
                ('period_time', models.FloatField()),
                ('description', ckeditor.fields.RichTextField()),
                ('genre', models.ManyToManyField(related_name='genre_movie', to='repository.genre')),
            ],
        ),
        migrations.RemoveField(
            model_name='serial',
            name='genre',
        ),
        migrations.AlterField(
            model_name='command',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='command', to=settings.AUTH_USER_MODEL),
        ),
        migrations.DeleteModel(
            name='Movie',
        ),
        migrations.DeleteModel(
            name='Serial',
        ),
        migrations.AddField(
            model_name='command',
            name='film',
            field=models.ManyToManyField(related_name='command', to='repository.film'),
        ),
    ]
